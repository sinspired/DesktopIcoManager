name: Publish C# Project

on:
  push:
    branches:
      - main
    tags:
      - 'v*'

jobs:
  build_publish:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup .NET
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: '8.0.x'

      - name: Build project
        run: dotnet build DesktopICO.csproj --configuration Release --no-restore

      - name: Publish project
        run: dotnet publish Properties/PublishProfiles/FolderProfile.pubxml --configuration Release --output ./bin/publish

      # - name: Create Release
      #   id: create_release
      #   uses: softprops/action-gh-release@v1
      #   with:
      #     tag: ${{ github.ref }}
      #     files: ./bin/publish/*
      #   env:
      #     GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      
      - name: Get tag description
        id: tag_description
        run: |
          TAG_DESCRIPTION=$(git tag -l --format='%(contents)' ${{ github.ref_name }})
          echo "tag_description=${TAG_DESCRIPTION}" >> $GITHUB_OUTPUT
        shell: bash
      
      - name: Get latest commit message
        id: commit_message
        run: |
          COMMIT_MESSAGE=$(git log -1 --pretty=%B)
          echo "commit_message=${COMMIT_MESSAGE}" >> $GITHUB_OUTPUT
        shell: bash

      - name: Check existing release
        id: check_release
        run: |
          if gh release view ${{ github.ref_name }} &> /dev/null; then
            echo "release_exists=true" >> $GITHUB_OUTPUT
          else
            echo "release_exists=false" >> $GITHUB_OUTPUT
          fi
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Delete existing release
        if: steps.check_release.outputs.release_exists == 'true'
        run: |
          gh release delete ${{ github.ref_name }} --yes
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Create Release
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          gh release create ${{ github.ref_name }} \
            --title "${{ github.ref_name }} ${{ steps.tag_description.outputs.tag_description }}" \
            --notes "Release for ${{ github.ref_name }}

          Changes in this release:
          ${{ steps.commit_message.outputs.commit_message }}
        shell: bash